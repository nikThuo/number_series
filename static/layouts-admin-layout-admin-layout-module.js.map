{"version":3,"sources":["webpack:///./node_modules/ngx-toastr/fesm5/ngx-toastr.js","webpack:///./src/app/pages/batch-history/batch-history.component.html","webpack:///./src/app/pages/create-product/create-product.component.html","webpack:///./src/app/pages/dashboard/dashboard.component.html","webpack:///./src/app/pages/icons/icons.component.html","webpack:///./src/app/pages/map/map.component.html","webpack:///./src/app/pages/notifications/notifications.component.html","webpack:///./src/app/pages/tables/tables.component.html","webpack:///./src/app/pages/typography/typography.component.html","webpack:///./src/app/pages/user/user.component.html","webpack:///./src/app/layouts/admin-layout/admin-layout.module.ts","webpack:///./src/app/layouts/admin-layout/admin-layout.routing.ts","webpack:///./src/app/pages/batch-history/batch-history.component.ts","webpack:///./src/app/pages/create-product/create-product.component.ts","webpack:///./src/app/pages/dashboard/dashboard.component.ts","webpack:///./src/app/pages/icons/icons.component.ts","webpack:///./src/app/pages/map/map.component.ts","webpack:///./src/app/pages/notifications/notifications.component.ts","webpack:///./src/app/pages/tables/tables.component.ts","webpack:///./src/app/pages/typography/typography.component.ts","webpack:///./src/app/pages/user/user.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AACoK;AAC1K;AAClD;AAC0B;AACA;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAU;AACxC,QAAQ,+DAAS;AACjB;AACA;AACA,SAAS;AACT,QAAQ,wDAAU,uBAAuB,wDAAU;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,2BAA2B,wDAAU;AACrC,QAAQ,8DAAQ;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sEAAgB,EAAE,+CAA+C,6BAA6B,4DAAM,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AACxM,uBAAuB,wDAAU;AACjC,QAAQ,gEAAU,EAAE,qBAAqB;AACzC,QAAQ,qDAAO,IAAI,4DAAM,CAAC,wDAAQ;AAClC,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sEAAgB,EAAE,sCAAsC,oBAAoB,4DAAM,oBAAoB,4DAAM,CAAC,sEAAwB,GAAG,4DAAM,CAAC,4DAAc,GAAG,4DAAM,CAAC,wDAAQ,GAAG,EAAE,sCAAsC;AACxP,cAAc,wDAAU;AACxB,QAAQ,gEAAU,EAAE,qBAAqB;AACzC,QAAQ,qDAAO,IAAI,4DAAM,CAAC,wDAAQ;AAClC,QAAQ,wDAAU;AAClB,YAAY,sEAAwB;AACpC,YAAY,4DAAc;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA,6BAA6B,4CAAO;AACpC;AACA,gCAAgC,4CAAO;AACvC;AACA,iCAAiC,4CAAO;AACxC;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAQ,GAAG;AACvC;AACA,4CAA4C,sDAAQ,GAAG;AACvD;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,8BAA8B,UAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD,eAAe,sDAAQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,gBAAgB,4DAAM,WAAW,4DAAM,CAAC,sDAAQ,GAAG,4DAAM,CAAC,sEAAY,GAAG,4DAAM,CAAC,oDAAM,GAAG,EAAE,4CAA4C;AACzQ,oBAAoB,wDAAU;AAC9B,QAAQ,gEAAU,EAAE,qBAAqB;AACzC,QAAQ,qDAAO,IAAI,4DAAM;AACzB,QAAQ,wDAAU;AAClB,YAAY,sDAAQ;AACpB,YAAY,sEAAY;AACxB,YAAY,oDAAM;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAQ,GAAG,eAAe,kBAAkB;AACjE;AACA,6CAA6C,uBAAuB,EAAE;AACtE;AACA;AACA,kDAAkD,+BAA+B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAQ,GAAG,eAAe,kBAAkB;AACjE,yCAAyC,uBAAuB,EAAE;AAClE;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAQ,GAAG,eAAe,mBAAmB;AAClE,yCAAyC,+DAA+D,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB,EAAE;AAClE;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,EAAE;AACvG,aAAa;AACb;AACA;AACA,mDAAmD,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,qCAAqC,EAAE;AAC3G,aAAa;AACb;AACA;AACA,uDAAuD,eAAe,EAAE;AACxE;AACA;AACA;AACA;AACA,yCAAyC,eAAe,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAU;AACd,QAAQ,iEAAW;AACnB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,iEAAW;AACnB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,iEAAW;AACnB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,kEAAY;AACpB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,kEAAY;AACpB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,kEAAY;AACpB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,YAAY,wDAAU;AACtB,QAAQ,+DAAS;AACjB;AACA,gLAAgL,gHAAgH,SAAS,4CAA4C,uBAAuB,qWAAqW,WAAW;AAC5tB;AACA,gBAAgB,mEAAO;AACvB,oBAAoB,iEAAK,aAAa,iEAAK,EAAE,aAAa;AAC1D,oBAAoB,iEAAK,WAAW,iEAAK,EAAE,aAAa;AACxD,oBAAoB,iEAAK,YAAY,iEAAK,EAAE,aAAa;AACzD,oBAAoB,sEAAU,uBAAuB,mEAAO,IAAI,YAAY,KAAK,UAAU;AAC3F,oBAAoB,sEAAU,sBAAsB,mEAAO,IAAI,YAAY,KAAK,UAAU;AAC1F;AACA;AACA;AACA,SAAS;AACT,QAAQ,wDAAU;AAClB;AACA,YAAY,oDAAM;AAClB;AACA;AACA,CAAC;;AAED,0BAA0B,sDAAQ,GAAG,mCAAmC,wBAAwB;AAChG;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC,wDAAU;AAC9C,QAAQ,8DAAQ;AAChB,sBAAsB,4DAAY;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,wDAAU;AAC1C,QAAQ,8DAAQ;AAChB,sBAAsB,4DAAY;AAClC,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2DAA2D,+BAA+B,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uBAAuB,EAAE;AACxE;AACA;AACA;AACA,uDAAuD,+BAA+B,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uBAAuB,EAAE;AACxE;AACA;AACA;AACA;AACA,uDAAuD,+BAA+B,EAAE;AACxF;AACA;AACA,IAAI,wDAAU;AACd,QAAQ,iEAAW;AACnB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,iEAAW;AACnB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,kEAAY;AACpB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,kEAAY;AACpB,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAC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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["import { __decorate, __metadata, __extends, __param, __values, __assign } from 'tslib';\nimport { Directive, ElementRef, NgModule, InjectionToken, defineInjectable, inject, Injectable, Inject, ComponentFactoryResolver, ApplicationRef, SecurityContext, INJECTOR, NgZone, Injector, HostBinding, HostListener, Component } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\nvar ToastContainerDirective = /** @class */ (function () {\n    function ToastContainerDirective(el) {\n        this.el = el;\n    }\n    ToastContainerDirective.prototype.getContainerElement = function () {\n        return this.el.nativeElement;\n    };\n    ToastContainerDirective = __decorate([\n        Directive({\n            selector: '[toastContainer]',\n            exportAs: 'toastContainer',\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], ToastContainerDirective);\n    return ToastContainerDirective;\n}());\nvar ToastContainerModule = /** @class */ (function () {\n    function ToastContainerModule() {\n    }\n    ToastContainerModule = __decorate([\n        NgModule({\n            declarations: [ToastContainerDirective],\n            exports: [ToastContainerDirective],\n        })\n    ], ToastContainerModule);\n    return ToastContainerModule;\n}());\n\n/**\n * Everything a toast needs to launch\n */\nvar ToastPackage = /** @class */ (function () {\n    function ToastPackage(toastId, config, message, title, toastType, toastRef) {\n        var _this = this;\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this._onTap = new Subject();\n        this._onAction = new Subject();\n        this.toastRef.afterClosed().subscribe(function () {\n            _this._onAction.complete();\n            _this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    ToastPackage.prototype.triggerTap = function () {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    };\n    ToastPackage.prototype.onTap = function () {\n        return this._onTap.asObservable();\n    };\n    /** available for use in custom toast */\n    ToastPackage.prototype.triggerAction = function (action) {\n        this._onAction.next(action);\n    };\n    ToastPackage.prototype.onAction = function () {\n        return this._onAction.asObservable();\n    };\n    return ToastPackage;\n}());\nvar DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n};\nvar TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nvar ComponentPortal = /** @class */ (function () {\n    function ComponentPortal(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    ComponentPortal.prototype.attach = function (host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    };\n    /** Detach this portal from its host */\n    ComponentPortal.prototype.detach = function () {\n        var host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    };\n    Object.defineProperty(ComponentPortal.prototype, \"isAttached\", {\n        /** Whether this portal is attached to a host. */\n        get: function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    ComponentPortal.prototype.setAttachedHost = function (host) {\n        this._attachedHost = host;\n    };\n    return ComponentPortal;\n}());\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nvar BasePortalHost = /** @class */ (function () {\n    function BasePortalHost() {\n    }\n    BasePortalHost.prototype.attach = function (portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    };\n    BasePortalHost.prototype.detach = function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    };\n    BasePortalHost.prototype.setDisposeFn = function (fn) {\n        this._disposeFn = fn;\n    };\n    return BasePortalHost;\n}());\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nvar DomPortalHost = /** @class */ (function (_super) {\n    __extends(DomPortalHost, _super);\n    function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef) {\n        var _this = _super.call(this) || this;\n        _this._hostDomElement = _hostDomElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    DomPortalHost.prototype.attachComponentPortal = function (portal, newestOnTop) {\n        var _this = this;\n        var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(function () {\n            _this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    };\n    /** Gets the root HTMLElement for an instantiated component. */\n    DomPortalHost.prototype._getComponentRootNode = function (componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    };\n    return DomPortalHost;\n}(BasePortalHost));\n\n/** Container inside which all toasts will render. */\nvar OverlayContainer = /** @class */ (function () {\n    function OverlayContainer(_document) {\n        this._document = _document;\n    }\n    OverlayContainer.prototype.ngOnDestroy = function () {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    };\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    OverlayContainer.prototype.getContainerElement = function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    OverlayContainer.prototype._createContainer = function () {\n        var container = this._document.createElement('div');\n        container.classList.add('overlay-container');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    OverlayContainer.ngInjectableDef = defineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(inject(DOCUMENT)); }, token: OverlayContainer, providedIn: \"root\" });\n    OverlayContainer = __decorate([\n        Injectable({ providedIn: 'root' }),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], OverlayContainer);\n    return OverlayContainer;\n}());\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar OverlayRef = /** @class */ (function () {\n    function OverlayRef(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    OverlayRef.prototype.attach = function (portal, newestOnTop) {\n        if (newestOnTop === void 0) { newestOnTop = true; }\n        return this._portalHost.attach(portal, newestOnTop);\n    };\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    OverlayRef.prototype.detach = function () {\n        return this._portalHost.detach();\n    };\n    return OverlayRef;\n}());\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nvar Overlay = /** @class */ (function () {\n    function Overlay(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._document = _document;\n        // Namespace panes by overlay container\n        this._paneElements = new Map();\n    }\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    Overlay.prototype.create = function (positionClass, overlayContainer) {\n        // get existing pane if possible\n        return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    };\n    Overlay.prototype.getPaneElement = function (positionClass, overlayContainer) {\n        if (positionClass === void 0) { positionClass = ''; }\n        if (!this._paneElements.get(overlayContainer)) {\n            this._paneElements.set(overlayContainer, {});\n        }\n        if (!this._paneElements.get(overlayContainer)[positionClass]) {\n            this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n        }\n        return this._paneElements.get(overlayContainer)[positionClass];\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = function (positionClass, overlayContainer) {\n        var pane = this._document.createElement('div');\n        pane.id = 'toast-container';\n        pane.classList.add(positionClass);\n        pane.classList.add('toast-container');\n        if (!overlayContainer) {\n            this._overlayContainer.getContainerElement().appendChild(pane);\n        }\n        else {\n            overlayContainer.getContainerElement().appendChild(pane);\n        }\n        return pane;\n    };\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    Overlay.prototype._createPortalHost = function (pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    };\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    Overlay.prototype._createOverlayRef = function (pane) {\n        return new OverlayRef(this._createPortalHost(pane));\n    };\n    Overlay.ngInjectableDef = defineInjectable({ factory: function Overlay_Factory() { return new Overlay(inject(OverlayContainer), inject(ComponentFactoryResolver), inject(ApplicationRef), inject(DOCUMENT)); }, token: Overlay, providedIn: \"root\" });\n    Overlay = __decorate([\n        Injectable({ providedIn: 'root' }),\n        __param(3, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [OverlayContainer,\n            ComponentFactoryResolver,\n            ApplicationRef, Object])\n    ], Overlay);\n    return Overlay;\n}());\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nvar ToastRef = /** @class */ (function () {\n    function ToastRef(_overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Count of duplicates of this toast */\n        this.duplicatesCount = 0;\n        /** Subject for notifying the user that the toast has finished closing. */\n        this._afterClosed = new Subject();\n        /** triggered when toast is activated */\n        this._activate = new Subject();\n        /** notifies the toast that it should close before the timeout */\n        this._manualClose = new Subject();\n        /** notifies the toast that it should reset the timeouts */\n        this._resetTimeout = new Subject();\n        /** notifies the toast that it should count a duplicate toast */\n        this._countDuplicate = new Subject();\n    }\n    ToastRef.prototype.manualClose = function () {\n        this._manualClose.next();\n        this._manualClose.complete();\n    };\n    ToastRef.prototype.manualClosed = function () {\n        return this._manualClose.asObservable();\n    };\n    ToastRef.prototype.timeoutReset = function () {\n        return this._resetTimeout.asObservable();\n    };\n    ToastRef.prototype.countDuplicate = function () {\n        return this._countDuplicate.asObservable();\n    };\n    /**\n     * Close the toast.\n     */\n    ToastRef.prototype.close = function () {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    };\n    /** Gets an observable that is notified when the toast is finished closing. */\n    ToastRef.prototype.afterClosed = function () {\n        return this._afterClosed.asObservable();\n    };\n    ToastRef.prototype.isInactive = function () {\n        return this._activate.isStopped;\n    };\n    ToastRef.prototype.activate = function () {\n        this._activate.next();\n        this._activate.complete();\n    };\n    /** Gets an observable that is notified when the toast has started opening. */\n    ToastRef.prototype.afterActivate = function () {\n        return this._activate.asObservable();\n    };\n    /** Reset the toast timouts and count duplicates */\n    ToastRef.prototype.onDuplicate = function (resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    };\n    return ToastRef;\n}());\n/** Custom injector type specifically for instantiating components with a toast. */\nvar ToastInjector = /** @class */ (function () {\n    function ToastInjector(_toastPackage, _parentInjector) {\n        this._toastPackage = _toastPackage;\n        this._parentInjector = _parentInjector;\n    }\n    ToastInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (token === ToastPackage) {\n            return this._toastPackage;\n        }\n        return this._parentInjector.get(token, notFoundValue, flags);\n    };\n    return ToastInjector;\n}());\n\nvar ToastrService = /** @class */ (function () {\n    function ToastrService(token, overlay, _injector, sanitizer, ngZone) {\n        this.overlay = overlay;\n        this._injector = _injector;\n        this.sanitizer = sanitizer;\n        this.ngZone = ngZone;\n        this.currentlyActive = 0;\n        this.toasts = [];\n        this.index = 0;\n        this.toastrConfig = __assign({}, token.default, token.config);\n        if (token.config.iconClasses) {\n            this.toastrConfig.iconClasses = __assign({}, token.default.iconClasses, token.config.iconClasses);\n        }\n    }\n    /** show toast */\n    ToastrService.prototype.show = function (message, title, override, type) {\n        if (override === void 0) { override = {}; }\n        if (type === void 0) { type = ''; }\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    };\n    /** show successful toast */\n    ToastrService.prototype.success = function (message, title, override) {\n        if (override === void 0) { override = {}; }\n        var type = this.toastrConfig.iconClasses.success || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    };\n    /** show error toast */\n    ToastrService.prototype.error = function (message, title, override) {\n        if (override === void 0) { override = {}; }\n        var type = this.toastrConfig.iconClasses.error || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    };\n    /** show info toast */\n    ToastrService.prototype.info = function (message, title, override) {\n        if (override === void 0) { override = {}; }\n        var type = this.toastrConfig.iconClasses.info || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    };\n    /** show warning toast */\n    ToastrService.prototype.warning = function (message, title, override) {\n        if (override === void 0) { override = {}; }\n        var type = this.toastrConfig.iconClasses.warning || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    };\n    /**\n     * Remove all or a single toast by id\n     */\n    ToastrService.prototype.clear = function (toastId) {\n        var e_1, _a;\n        try {\n            // Call every toastRef manualClose function\n            for (var _b = __values(this.toasts), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var toast = _c.value;\n                if (toastId !== undefined) {\n                    if (toast.toastId === toastId) {\n                        toast.toastRef.manualClose();\n                        return;\n                    }\n                }\n                else {\n                    toast.toastRef.manualClose();\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Remove and destroy a single toast by id\n     */\n    ToastrService.prototype.remove = function (toastId) {\n        var found = this._findToast(toastId);\n        if (!found) {\n            return false;\n        }\n        found.activeToast.toastRef.close();\n        this.toasts.splice(found.index, 1);\n        this.currentlyActive = this.currentlyActive - 1;\n        if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n            return false;\n        }\n        if (this.currentlyActive < this.toastrConfig.maxOpened &&\n            this.toasts[this.currentlyActive]) {\n            var p = this.toasts[this.currentlyActive].toastRef;\n            if (!p.isInactive()) {\n                this.currentlyActive = this.currentlyActive + 1;\n                p.activate();\n            }\n        }\n        return true;\n    };\n    /**\n     * Determines if toast message is already shown\n     */\n    ToastrService.prototype.findDuplicate = function (message, resetOnDuplicate, countDuplicates) {\n        for (var i = 0; i < this.toasts.length; i++) {\n            var toast = this.toasts[i];\n            if (toast.message === message) {\n                toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                return toast;\n            }\n        }\n        return null;\n    };\n    /** create a clone of global config and apply individual settings */\n    ToastrService.prototype.applyConfig = function (override) {\n        if (override === void 0) { override = {}; }\n        return __assign({}, this.toastrConfig, override);\n    };\n    /**\n     * Find toast object by id\n     */\n    ToastrService.prototype._findToast = function (toastId) {\n        for (var i = 0; i < this.toasts.length; i++) {\n            if (this.toasts[i].toastId === toastId) {\n                return { index: i, activeToast: this.toasts[i] };\n            }\n        }\n        return null;\n    };\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    ToastrService.prototype._preBuildNotification = function (toastType, message, title, config) {\n        var _this = this;\n        if (config.onActivateTick) {\n            return this.ngZone.run(function () {\n                return _this._buildNotification(toastType, message, title, config);\n            });\n        }\n        return this._buildNotification(toastType, message, title, config);\n    };\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    ToastrService.prototype._buildNotification = function (toastType, message, title, config) {\n        var _this = this;\n        if (!config.toastComponent) {\n            throw new Error('toastComponent required');\n        }\n        // max opened and auto dismiss = true\n        var duplicate = this.findDuplicate(message, this.toastrConfig.resetTimeoutOnDuplicate, this.toastrConfig.countDuplicates);\n        if (message && this.toastrConfig.preventDuplicates && duplicate !== null) {\n            return duplicate;\n        }\n        this.previousToastMessage = message;\n        var keepInactive = false;\n        if (this.toastrConfig.maxOpened &&\n            this.currentlyActive >= this.toastrConfig.maxOpened) {\n            keepInactive = true;\n            if (this.toastrConfig.autoDismiss) {\n                this.clear(this.toasts[0].toastId);\n            }\n        }\n        var overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n        this.index = this.index + 1;\n        var sanitizedMessage = message;\n        if (message && config.enableHtml) {\n            sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n        }\n        var toastRef = new ToastRef(overlayRef);\n        var toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n        var toastInjector = new ToastInjector(toastPackage, this._injector);\n        var component = new ComponentPortal(config.toastComponent, toastInjector);\n        var portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n        toastRef.componentInstance = portal._component;\n        var ins = {\n            toastId: this.index,\n            message: message || '',\n            toastRef: toastRef,\n            onShown: toastRef.afterActivate(),\n            onHidden: toastRef.afterClosed(),\n            onTap: toastPackage.onTap(),\n            onAction: toastPackage.onAction(),\n            portal: portal\n        };\n        if (!keepInactive) {\n            setTimeout(function () {\n                ins.toastRef.activate();\n                _this.currentlyActive = _this.currentlyActive + 1;\n            });\n        }\n        this.toasts.push(ins);\n        return ins;\n    };\n    ToastrService.ngInjectableDef = defineInjectable({ factory: function ToastrService_Factory() { return new ToastrService(inject(TOAST_CONFIG), inject(Overlay), inject(INJECTOR), inject(DomSanitizer), inject(NgZone)); }, token: ToastrService, providedIn: \"root\" });\n    ToastrService = __decorate([\n        Injectable({ providedIn: 'root' }),\n        __param(0, Inject(TOAST_CONFIG)),\n        __metadata(\"design:paramtypes\", [Object, Overlay,\n            Injector,\n            DomSanitizer,\n            NgZone])\n    ], ToastrService);\n    return ToastrService;\n}());\n\nvar Toast = /** @class */ (function () {\n    function Toast(toastrService, toastPackage, ngZone) {\n        var _this = this;\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.ngZone = ngZone;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = {\n            value: 'inactive',\n            params: {\n                easeTime: this.toastPackage.config.easeTime,\n                easing: 'ease-in'\n            }\n        };\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = toastPackage.toastType + \" \" + toastPackage.config.toastClass;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(function () {\n            _this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(function () {\n            _this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(function () {\n            _this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(function (count) {\n            _this.duplicatesCount = count;\n        });\n    }\n    Object.defineProperty(Toast.prototype, \"displayStyle\", {\n        /** hides component when waiting to be displayed */\n        get: function () {\n            if (this.state.value === 'inactive') {\n                return 'none';\n            }\n            return 'inherit';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Toast.prototype.ngOnDestroy = function () {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    };\n    /**\n     * activates toast and sets timeout\n     */\n    Toast.prototype.activateToast = function () {\n        var _this = this;\n        this.state = __assign({}, this.state, { value: 'active' });\n        if (!this.options.disableTimeOut && this.options.timeOut) {\n            this.outsideTimeout(function () { return _this.remove(); }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.outsideInterval(function () { return _this.updateProgress(); }, 10);\n            }\n        }\n    };\n    /**\n     * updates progress bar width\n     */\n    Toast.prototype.updateProgress = function () {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        var now = new Date().getTime();\n        var remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    };\n    Toast.prototype.resetTimeout = function () {\n        var _this = this;\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = __assign({}, this.state, { value: 'active' });\n        this.outsideTimeout(function () { return _this.remove(); }, this.originalTimeout);\n        this.options.timeOut = this.originalTimeout;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(function () { return _this.updateProgress(); }, 10);\n        }\n    };\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    Toast.prototype.remove = function () {\n        var _this = this;\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = __assign({}, this.state, { value: 'removed' });\n        this.outsideTimeout(function () { return _this.toastrService.remove(_this.toastPackage.toastId); }, +this.toastPackage.config.easeTime);\n    };\n    Toast.prototype.tapToast = function () {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    };\n    Toast.prototype.stickAround = function () {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    };\n    Toast.prototype.delayedHideToast = function () {\n        var _this = this;\n        if (this.options.disableTimeOut ||\n            this.options.extendedTimeOut === 0 ||\n            this.state.value === 'removed') {\n            return;\n        }\n        this.outsideTimeout(function () { return _this.remove(); }, this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(function () { return _this.updateProgress(); }, 10);\n        }\n    };\n    Toast.prototype.outsideTimeout = function (func, timeout) {\n        var _this = this;\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(function () {\n                return (_this.timeout = setTimeout(function () { return _this.runInsideAngular(func); }, timeout));\n            });\n        }\n        else {\n            this.timeout = setTimeout(function () { return func(); }, timeout);\n        }\n    };\n    Toast.prototype.outsideInterval = function (func, timeout) {\n        var _this = this;\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(function () {\n                return (_this.intervalId = setInterval(function () { return _this.runInsideAngular(func); }, timeout));\n            });\n        }\n        else {\n            this.intervalId = setInterval(function () { return func(); }, timeout);\n        }\n    };\n    Toast.prototype.runInsideAngular = function (func) {\n        if (this.ngZone) {\n            this.ngZone.run(function () { return func(); });\n        }\n        else {\n            func();\n        }\n    };\n    __decorate([\n        HostBinding('class'),\n        __metadata(\"design:type\", Object)\n    ], Toast.prototype, \"toastClasses\", void 0);\n    __decorate([\n        HostBinding('@flyInOut'),\n        __metadata(\"design:type\", Object)\n    ], Toast.prototype, \"state\", void 0);\n    __decorate([\n        HostBinding('style.display'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], Toast.prototype, \"displayStyle\", null);\n    __decorate([\n        HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Toast.prototype, \"tapToast\", null);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Toast.prototype, \"stickAround\", null);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Toast.prototype, \"delayedHideToast\", null);\n    Toast = __decorate([\n        Component({\n            selector: '[toast-component]',\n            template: \"\\n  <button *ngIf=\\\"options.closeButton\\\" (click)=\\\"remove()\\\" class=\\\"toast-close-button\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n  <div *ngIf=\\\"title\\\" [class]=\\\"options.titleClass\\\" [attr.aria-label]=\\\"title\\\">\\n    {{ title }} <ng-container *ngIf=\\\"duplicatesCount\\\">[{{ duplicatesCount + 1 }}]</ng-container>\\n  </div>\\n  <div *ngIf=\\\"message && options.enableHtml\\\" role=\\\"alertdialog\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [innerHTML]=\\\"message\\\">\\n  </div>\\n  <div *ngIf=\\\"message && !options.enableHtml\\\" role=\\\"alertdialog\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [attr.aria-label]=\\\"message\\\">\\n    {{ message }}\\n  </div>\\n  <div *ngIf=\\\"options.progressBar\\\">\\n    <div class=\\\"toast-progress\\\" [style.width]=\\\"width + '%'\\\"></div>\\n  </div>\\n  \",\n            animations: [\n                trigger('flyInOut', [\n                    state('inactive', style({ opacity: 0 })),\n                    state('active', style({ opacity: 1 })),\n                    state('removed', style({ opacity: 0 })),\n                    transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                    transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n                ])\n            ],\n            preserveWhitespaces: false\n        }),\n        __metadata(\"design:paramtypes\", [ToastrService,\n            ToastPackage,\n            NgZone])\n    ], Toast);\n    return Toast;\n}());\n\nvar DefaultGlobalConfig = __assign({}, DefaultNoComponentGlobalConfig, { toastComponent: Toast });\nvar ToastrModule = /** @class */ (function () {\n    function ToastrModule() {\n    }\n    ToastrModule_1 = ToastrModule;\n    ToastrModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: ToastrModule_1,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultGlobalConfig,\n                        config: config,\n                    },\n                },\n            ],\n        };\n    };\n    var ToastrModule_1;\n    ToastrModule = ToastrModule_1 = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            declarations: [Toast],\n            exports: [Toast],\n            entryComponents: [Toast],\n        })\n    ], ToastrModule);\n    return ToastrModule;\n}());\nvar ToastrComponentlessModule = /** @class */ (function () {\n    function ToastrComponentlessModule() {\n    }\n    ToastrComponentlessModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoComponentGlobalConfig,\n                        config: config,\n                    },\n                },\n            ],\n        };\n    };\n    ToastrComponentlessModule = __decorate([\n        NgModule({\n            imports: [CommonModule],\n        })\n    ], ToastrComponentlessModule);\n    return ToastrComponentlessModule;\n}());\n\nvar ToastNoAnimation = /** @class */ (function () {\n    function ToastNoAnimation(toastrService, toastPackage, appRef) {\n        var _this = this;\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.appRef = appRef;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = 'inactive';\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = toastPackage.toastType + \" \" + toastPackage.config.toastClass;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(function () {\n            _this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(function () {\n            _this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(function () {\n            _this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(function (count) {\n            _this.duplicatesCount = count;\n        });\n    }\n    Object.defineProperty(ToastNoAnimation.prototype, \"displayStyle\", {\n        /** hides component when waiting to be displayed */\n        get: function () {\n            if (this.state === 'inactive') {\n                return 'none';\n            }\n            return 'inherit';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ToastNoAnimation.prototype.ngOnDestroy = function () {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    };\n    /**\n     * activates toast and sets timeout\n     */\n    ToastNoAnimation.prototype.activateToast = function () {\n        var _this = this;\n        this.state = 'active';\n        if (!this.options.disableTimeOut && this.options.timeOut) {\n            this.timeout = setTimeout(function () {\n                _this.remove();\n            }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(function () { return _this.updateProgress(); }, 10);\n            }\n        }\n        if (this.options.onActivateTick) {\n            this.appRef.tick();\n        }\n    };\n    /**\n     * updates progress bar width\n     */\n    ToastNoAnimation.prototype.updateProgress = function () {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        var now = new Date().getTime();\n        var remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    };\n    ToastNoAnimation.prototype.resetTimeout = function () {\n        var _this = this;\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = 'active';\n        this.options.timeOut = this.originalTimeout;\n        this.timeout = setTimeout(function () { return _this.remove(); }, this.originalTimeout);\n        this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(function () { return _this.updateProgress(); }, 10);\n        }\n    };\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    ToastNoAnimation.prototype.remove = function () {\n        var _this = this;\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = 'removed';\n        this.timeout = setTimeout(function () {\n            return _this.toastrService.remove(_this.toastPackage.toastId);\n        });\n    };\n    ToastNoAnimation.prototype.tapToast = function () {\n        if (this.state === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    };\n    ToastNoAnimation.prototype.stickAround = function () {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    };\n    ToastNoAnimation.prototype.delayedHideToast = function () {\n        var _this = this;\n        if (this.options.disableTimeOut ||\n            this.options.extendedTimeOut === 0 ||\n            this.state === 'removed') {\n            return;\n        }\n        this.timeout = setTimeout(function () { return _this.remove(); }, this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(function () { return _this.updateProgress(); }, 10);\n        }\n    };\n    __decorate([\n        HostBinding('class'),\n        __metadata(\"design:type\", Object)\n    ], ToastNoAnimation.prototype, \"toastClasses\", void 0);\n    __decorate([\n        HostBinding('style.display'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], ToastNoAnimation.prototype, \"displayStyle\", null);\n    __decorate([\n        HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToastNoAnimation.prototype, \"tapToast\", null);\n    __decorate([\n        HostListener('mouseenter'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToastNoAnimation.prototype, \"stickAround\", null);\n    __decorate([\n        HostListener('mouseleave'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToastNoAnimation.prototype, \"delayedHideToast\", null);\n    ToastNoAnimation = __decorate([\n        Component({\n            selector: '[toast-component]',\n            template: \"\\n  <button *ngIf=\\\"options.closeButton\\\" (click)=\\\"remove()\\\" class=\\\"toast-close-button\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n  <div *ngIf=\\\"title\\\" [class]=\\\"options.titleClass\\\" [attr.aria-label]=\\\"title\\\">\\n    {{ title }} <ng-container *ngIf=\\\"duplicatesCount\\\">[{{ duplicatesCount + 1 }}]</ng-container>\\n  </div>\\n  <div *ngIf=\\\"message && options.enableHtml\\\" role=\\\"alert\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [innerHTML]=\\\"message\\\">\\n  </div>\\n  <div *ngIf=\\\"message && !options.enableHtml\\\" role=\\\"alert\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [attr.aria-label]=\\\"message\\\">\\n    {{ message }}\\n  </div>\\n  <div *ngIf=\\\"options.progressBar\\\">\\n    <div class=\\\"toast-progress\\\" [style.width]=\\\"width + '%'\\\"></div>\\n  </div>\\n  \"\n        }),\n        __metadata(\"design:paramtypes\", [ToastrService,\n            ToastPackage,\n            ApplicationRef])\n    ], ToastNoAnimation);\n    return ToastNoAnimation;\n}());\nvar DefaultNoAnimationsGlobalConfig = __assign({}, DefaultNoComponentGlobalConfig, { toastComponent: ToastNoAnimation });\nvar ToastNoAnimationModule = /** @class */ (function () {\n    function ToastNoAnimationModule() {\n    }\n    ToastNoAnimationModule_1 = ToastNoAnimationModule;\n    ToastNoAnimationModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: ToastNoAnimationModule_1,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoAnimationsGlobalConfig,\n                        config: config,\n                    },\n                },\n            ],\n        };\n    };\n    var ToastNoAnimationModule_1;\n    ToastNoAnimationModule = ToastNoAnimationModule_1 = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            declarations: [ToastNoAnimation],\n            exports: [ToastNoAnimation],\n            entryComponents: [ToastNoAnimation],\n        })\n    ], ToastNoAnimationModule);\n    return ToastNoAnimationModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService };\n//# sourceMappingURL=ngx-toastr.js.map\n","module.exports = \"\\r\\n<div class=\\\" content\\\">\\r\\n\\r\\n    <div class=\\\" row\\\">\\r\\n        <div class=\\\" col-md-12\\\">\\r\\n          <div class=\\\" card\\\">\\r\\n            <div class=\\\" card-header\\\">\\r\\n              <h4 class=\\\" card-title\\\">Batch History </h4>\\r\\n            </div>\\r\\n            <div class=\\\" card-body\\\">\\r\\n              <!-- <div class=\\\" table-responsive\\\"></div> -->\\r\\n                <table class=\\\" table tablesorter\\\" id=\\\"\\\">\\r\\n                    \\r\\n                        <thead>\\r\\n                          <tr>\\r\\n                            <!-- <th class=\\\"text-center\\\">#ID</th> -->\\r\\n                            <th>Product Name</th>\\r\\n                            <th>Product Desc</th>\\r\\n                            <th>Product Type</th>\\r\\n                            <th>Package Type</th>\\r\\n                            <th>Net Weight (kgs)</th>\\r\\n                            <th>Product Price</th>\\r\\n                            <th>Taxed amount</th>\\r\\n                            \\r\\n                           \\r\\n                            <th class=\\\"text-right\\\">History</th>\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr>\\r\\n                            <!-- <td class=\\\"text-center\\\">1</td> -->\\r\\n                            <td>OMO</td>\\r\\n                            <td>Powdered Detergent</td>\\r\\n                            <td>Convenience</td>\\r\\n                            <td>Poly Bag</td>\\r\\n                            <td>0.5</td>\\r\\n                            <td>500</td>\\r\\n                            <td>80</td>\\r\\n                           \\r\\n                            \\r\\n                            <td class=\\\"td-actions text-right\\\">\\r\\n                               \\r\\n                                    <!-- <button\\r\\n                                      rel=\\\"tooltip\\\"\\r\\n                                      class=\\\" btn btn-primary btn-round\\\"\\r\\n                                      (click)=\\\"showNotification('bottom', 'right')\\\">\\r\\n                                      Generate Batch Codes\\r\\n                                    </button> -->\\r\\n                                  \\r\\n                             \\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Open History</button>\\r\\n                              \\r\\n                            </td>\\r\\n                          </tr>\\r\\n\\r\\n\\r\\n                          <tr>\\r\\n                              <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\\\"></script>\\r\\n                                                      \\r\\n<!-- <div class=\\\"container\\\"> -->\\r\\n \\r\\n  <!-- Trigger the modal with a button -->\\r\\n  <!-- <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Open Modal</button> -->\\r\\n\\r\\n  <!-- Modal -->\\r\\n  <!-- <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\"> -->\\r\\n    \\r\\n      <!-- Modal content-->\\r\\n      <!-- <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Modal Header</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <p>Some text in the modal.</p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n</div> -->\\r\\n                          </tr>\\r\\n                          \\r\\n                          \\r\\n                        </tbody>\\r\\n                      </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  </div>\\r\\n\\r\\n \\r\\n    \"","module.exports = \"\\r\\n\\r\\n\\r\\n<div class=\\\" content\\\">\\r\\n  \\r\\n\\r\\n    <div class=\\\" row\\\">\\r\\n        <!------------------------------------------------------------------------------------------------>\\r\\n        <!------------------------------------------------------------------------------------------------>\\r\\n        <div class=\\\" card\\\">\\r\\n          <div class=\\\" card-header\\\"><h5 class=\\\" title\\\">Create Product </h5></div>\\r\\n          <div class=\\\" card-body\\\">\\r\\n            <form>\\r\\n              <!------------------------------------------------------------------------------------------------>\\r\\n              <div class=\\\" row\\\">\\r\\n                  <div class=\\\" col-md-12\\\">\\r\\n                    <div class=\\\" form-group\\\">\\r\\n                      <label> Product Name </label>\\r\\n                      <input\\r\\n                        class=\\\" form-control\\\"\\r\\n                        placeholder=\\\"Product Name\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        value=\\\"\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\" row\\\">\\r\\n                    <div class=\\\" col-md-8\\\">\\r\\n                      <div class=\\\" form-group\\\">\\r\\n                        <label> Product Description </label>\\r\\n                        <textarea\\r\\n                          class=\\\" form-control\\\"\\r\\n                          cols=\\\"80\\\"\\r\\n                          placeholder=\\\"Here can be your description\\\"\\r\\n                          rows=\\\"4\\\"\\r\\n                          value=\\\"\\\">\\r\\n                          \\r\\n                        </textarea                >\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n             \\r\\n              <!-- <div class=\\\" row\\\">\\r\\n                  <div class=\\\" col-md-4 pr-md-1\\\">\\r\\n                    <div class=\\\" form-group\\\">\\r\\n                      <label> Product Type </label>\\r\\n                      <input\\r\\n                        class=\\\" form-control\\\"\\r\\n                        placeholder=\\\"Product Type\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        value=\\\"\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\" col-md-4 px-md-1\\\">\\r\\n                    <div class=\\\" form-group\\\">\\r\\n                      <label> Net Weight </label>\\r\\n                      <input\\r\\n                        class=\\\" form-control\\\"\\r\\n                        placeholder=\\\"Net Weight\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        value=\\\"\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\" col-md-4 pl-md-1\\\">\\r\\n                    <div class=\\\" form-group\\\">\\r\\n                      <label> Package Type</label>\\r\\n                      <input\\r\\n                        class=\\\" form-control\\\"\\r\\n                        placeholder=\\\"\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n  \\r\\n            <div class=\\\" row\\\">\\r\\n              <div class=\\\" col-md-6 pr-md-1\\\">\\r\\n                <div class=\\\" form-group\\\">\\r\\n                  <label> Product Price</label>\\r\\n                  <input\\r\\n                    class=\\\" form-control\\\"\\r\\n                    placeholder=\\\"press enter after input\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    value=\\\"\\\"\\r\\n                    name=\\\"productPrice\\\"\\r\\n                    onsearch=\\\"calculatetax()\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\" col-md-6 pl-md-1\\\">\\r\\n                <div class=\\\" form-group\\\">\\r\\n                  <label> Taxed amount</label>\\r\\n                  <input\\r\\n                    class=\\\" form-control\\\"\\r\\n                    placeholder=\\\"\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    name=\\\"tax\\\"\\r\\n                    disabled/>\\r\\n                </div>\\r\\n              </div>\\r\\n              <script>\\r\\n                  function calculatetax() {\\r\\n                      var productPrice = document.getElementById('productPrice').value;\\r\\n                      \\r\\n                      var taxes = (0.16 * productPrice) * (quantity) ;\\r\\n                      var totalTax = document.getElementById('tax');\\r\\n                      totalTax.value = taxes;\\r\\n                  }\\r\\n              </script>\\r\\n  \\r\\n              \\r\\n            </div> -->\\r\\n  \\r\\n            <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-primary\\\">\\r\\n              <i class=\\\"material-icons\\\">CREATE</i>\\r\\n            </button>\\r\\n    \\r\\n        </form>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <!----------------------------------------------------------------------------------------------------------------------------------------->\\r\\n  <!----------------------------------------------------------------------------------------------------------------------------------------->\"","module.exports = \"\\n<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-12\\\">\\n      <div class=\\\" card card-chart\\\">\\n        <div class=\\\" card-header\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-sm-6 text-left\\\">\\n              \\n              <h1 class=\\\" card-title\\\">Welcome to </h1>\\n              <h1 class=\\\" card-title\\\">NUMBER SERIES </h1>\\n            <!-- </br> <h1>Number Series</h1> -->\\n            </div>\\n            \\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" chart-area\\\"><canvas id=\\\"chartBig1\\\"> </canvas></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n<div class=\\\" content\\\">\\n\\n    <div class=\\\" row\\\">\\n        <div class=\\\" col-md-12\\\">\\n          <div class=\\\" card\\\">\\n            <div class=\\\" card-header\\\">\\n              <h4 class=\\\" card-title\\\">Batch History </h4>\\n            </div>\\n            <div class=\\\" card-body\\\">\\n              <!-- <div class=\\\" table-responsive\\\"></div> -->\\n                <table class=\\\" table tablesorter\\\" id=\\\"\\\">\\n                    \\n                        <thead>\\n                          <tr>\\n                            <!-- <th class=\\\"text-center\\\">#ID</th> -->\\n                            <th>Product Name</th>\\n                            <th>Product Desc</th>\\n                            <th>Product Type</th>\\n                            <th>Package Type</th>\\n                            <th>Net Weight (kgs)</th>\\n                            <th>Product Price</th>\\n                            <th>Taxed amount</th>\\n                            \\n                           \\n                            <th class=\\\"text-right\\\">History</th>\\n                          </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr>\\n                            <!-- <td class=\\\"text-center\\\">1</td> -->\\n                            <td>OMO</td>\\n                            <td>Powdered Detergent</td>\\n                            <td>Convenience</td>\\n                            <td>Poly Bag</td>\\n                            <td>0.5</td>\\n                            <td>500</td>\\n                            <td>80</td>\\n                           \\n                            \\n                            <td class=\\\"td-actions text-right\\\">\\n                               \\n                                    <!-- <button\\n                                      rel=\\\"tooltip\\\"\\n                                      class=\\\" btn btn-primary btn-round\\\"\\n                                      (click)=\\\"showNotification('bottom', 'right')\\\">\\n                                      Generate Batch Codes\\n                                    </button> -->\\n                                  \\n                             \\n                                <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Open History</button>\\n                              \\n                            </td>\\n                          </tr>\\n\\n\\n                          <tr>\\n                              <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\\\"></script>\\n                                                      \\n<!-- <div class=\\\"container\\\"> -->\\n \\n  <!-- Trigger the modal with a button -->\\n  <!-- <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Open Modal</button> -->\\n\\n  <!-- Modal -->\\n  <!-- <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\"> -->\\n    \\n      <!-- Modal content-->\\n      <!-- <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">Modal Header</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>Some text in the modal.</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n  \\n</div> -->\\n                          </tr>\\n                          \\n                          \\n                        </tbody>\\n                      </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n  </div>\\n\\n \\n    \"","module.exports = \"\\n<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-md-12\\\">\\n      <div class=\\\" card card-plain\\\">\\n        <div class=\\\" card-header\\\">Google Maps</div>\\n        <div class=\\\" card-body\\\"><div class=\\\" map\\\" id=\\\"map\\\"></div></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-md-6\\\">\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-header\\\">\\n          <h4 class=\\\" card-title\\\">Notifications Style</h4>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <ngb-alert [type]=\\\"'info'\\\" [dismissible]=\\\"false\\\">\\n            <span> This is a plain notification </span>\\n          </ngb-alert>\\n          <ngb-alert [type]=\\\"'info'\\\" *ngIf=\\\"!staticAlertClosed\\\" [dismissible]=\\\"false\\\">\\n            <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed = true\\\">\\n              <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n            </button>\\n            <span> This is a notification with close button. </span>\\n          </ngb-alert>\\n          <ngb-alert\\n            class=\\\" alert-with-icon\\\"\\n            data-notify=\\\"container\\\"\\n            [type]=\\\"'info'\\\"*ngIf=\\\"!staticAlertClosed1\\\" [dismissible]=\\\"false\\\">\\n              <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed1 = true\\\">\\n                <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n              </button>\\n            <span class=\\\" tim-icons icon-bell-55\\\" data-notify=\\\"icon\\\">\\n            </span>\\n            <span data-notify=\\\"message\\\">\\n              This is a notification with close button and icon.\\n            </span>\\n          </ngb-alert>\\n          <ngb-alert\\n            class=\\\" alert-with-icon\\\"\\n            data-notify=\\\"container\\\"\\n            [type]=\\\"'info'\\\"\\n            *ngIf=\\\"!staticAlertClosed2\\\" [dismissible]=\\\"false\\\">\\n              <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed2 = true\\\">\\n                <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n              </button>\\n            <span class=\\\" tim-icons icon-bell-55\\\" data-notify=\\\"icon\\\">\\n            </span>\\n            <span data-notify=\\\"message\\\">\\n              This is a notification with close button and icon and have\\n              many lines. You can see that the icon and the close button\\n              are always vertically aligned. This is a beautiful\\n              notification. So you don't have to worry about the style.\\n            </span>\\n          </ngb-alert>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-6\\\">\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-header\\\">\\n          <h4 class=\\\" card-title\\\">Notification states</h4>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <ngb-alert [type]=\\\"'primary'\\\" *ngIf=\\\"!staticAlertClosed3\\\" [dismissible]=\\\"false\\\">\\n            <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed3 = true\\\">\\n              <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n            </button>\\n            <span>\\n              <b> Primary - </b> This is a regular notification made\\n              with \\\".alert-primary\\\"\\n            </span>\\n          </ngb-alert>\\n          <ngb-alert [type]=\\\"'info'\\\" *ngIf=\\\"!staticAlertClosed4\\\" [dismissible]=\\\"false\\\">\\n            <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed4 = true\\\">\\n              <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n            </button>\\n            <span>\\n              <b> Info - </b> This is a regular notification made with\\n              \\\".alert-info\\\"\\n            </span>\\n          </ngb-alert>\\n          <ngb-alert [type]=\\\"'success'\\\" *ngIf=\\\"!staticAlertClosed5\\\" [dismissible]=\\\"false\\\">\\n            <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed5 = true\\\">\\n              <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n            </button>\\n            <span>\\n              <b> Success - </b> This is a regular notification made\\n              with \\\".alert-success\\\"\\n            </span>\\n          </ngb-alert>\\n          <ngb-alert [type]=\\\"'warning'\\\" *ngIf=\\\"!staticAlertClosed6\\\" [dismissible]=\\\"false\\\">\\n            <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed6 = true\\\">\\n              <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n            </button>\\n            <span>\\n              <b> Warning - </b> This is a regular notification made\\n              with \\\".alert-warning\\\"\\n            </span>\\n          </ngb-alert>\\n          <ngb-alert [type]=\\\"'danger'\\\" *ngIf=\\\"!staticAlertClosed7\\\" [dismissible]=\\\"false\\\">\\n            <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"staticAlertClosed7 = true\\\">\\n              <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n            </button>\\n            <span>\\n              <b> Danger - </b> This is a regular notification made with\\n              \\\".alert-danger\\\"\\n            </span>\\n          </ngb-alert>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-12\\\">\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" places-buttons\\\">\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-6 ml-auto mr-auto text-center\\\">\\n                <h4 class=\\\" card-title\\\">Notifications Places</h4>\\n                <p class=\\\" category\\\">Click to view notifications</p>\\n              </div>\\n            </div>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-lg-8 ml-auto mr-auto\\\">\\n                <div class=\\\" row\\\">\\n                  <div class=\\\" col-md-4\\\">\\n                    <button\\n                      class=\\\" btn btn-danger btn-block\\\"\\n                      (click)=\\\"showNotification('top', 'left')\\\"\\n                    >\\n                      Top Left\\n                    </button>\\n                  </div>\\n                  <div class=\\\" col-md-4\\\">\\n                    <button\\n                      class=\\\" btn btn-danger btn-block\\\"\\n                      (click)=\\\"showNotification('top', 'center')\\\"\\n                    >\\n                      Top Center\\n                    </button>\\n                  </div>\\n                  <div class=\\\" col-md-4\\\">\\n                    <button\\n                      class=\\\" btn btn-danger btn-block\\\"\\n                      (click)=\\\"showNotification('top', 'right')\\\"\\n                    >\\n                      Top Right\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-lg-8 ml-auto mr-auto\\\">\\n                <div class=\\\" row\\\">\\n                  <div class=\\\" col-md-4\\\">\\n                    <button\\n                      class=\\\" btn btn-danger btn-block\\\"\\n                      (click)=\\\"showNotification('bottom', 'left')\\\"\\n                    >\\n                      Bottom Left\\n                    </button>\\n                  </div>\\n                  <div class=\\\" col-md-4\\\">\\n                    <button\\n                      class=\\\" btn btn-danger btn-block\\\"\\n                      (click)=\\\"\\n                        showNotification('bottom', 'center')\\n                      \\\"\\n                    >\\n                      Bottom Center\\n                    </button>\\n                  </div>\\n                  <div class=\\\" col-md-4\\\">\\n                    <button\\n                      class=\\\" btn btn-danger btn-block\\\"\\n                      (click)=\\\"showNotification('bottom', 'right')\\\"\\n                    >\\n                      Bottom Right\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-md-12\\\">\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-header\\\">\\n          <h4 class=\\\" card-title\\\">Products</h4>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <!-- <div class=\\\" table-responsive\\\"></div> -->\\n            <table class=\\\" table tablesorter\\\" id=\\\"\\\">\\n              <thead class=\\\" text-primary\\\">\\n                <tr>\\n                  <th>Product Name</th>\\n                  <th>Product Description</th>\\n                  <th>Generate Batch Codes</th>\\n                  \\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                    <td>OMO</td>\\n                    <td>Powdered Detergent</td>\\n                  <td>\\n                      <div class=\\\" col-md-4\\\">\\n                          <button\\n                            class=\\\" btn btn-primary btn-round\\\"\\n                            (click)=\\\"showNotification('bottom', 'right')\\\">\\n                            Generate\\n                          </button>\\n                        </div>\\n                       \\n                </td>\\n                 \\n                </tr>\\n                <tr>\\n                  <td>{{productName}}</td>\\n                  <td>{{productDescription}}</td>\\n                  <td>\\n                      <div class=\\\" col-md-4\\\">\\n                          <!-- <button\\n                            class=\\\" btn btn-primary btn-round\\\"\\n                            (click)=\\\"showNotification('bottom', 'right')\\\">\\n                            Generate\\n                          </button> -->\\n                        </div>\\n                  </td>\\n                  \\n                </tr>\\n               \\n                \\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\" row\\\">\\n        <div class=\\\" card\\\">\\n          <div class=\\\" card-header\\\"><h5 class=\\\" title\\\">Create Product batch codes</h5></div>\\n          <div class=\\\" card-body\\\">\\n            <form>\\n            \\n              <div class=\\\" row\\\">\\n                <div class=\\\" col-md-6 pr-md-1\\\">\\n                  <div class=\\\" form-group\\\">\\n                    <label> Quantity </label>\\n                    <input\\n                      class=\\\" form-control\\\"\\n                      placeholder=\\\"package quantity\\\"\\n                      type=\\\"number\\\"\\n                      value=\\\"\\\"\\n                    />\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\" col-md-6 pl-md-1\\\">\\n                  <div class=\\\" form-group\\\">\\n                    <label> Date of Manufacture</label>\\n                    <input\\n                      class=\\\" form-control\\\"\\n                      placeholder=\\\"\\\"\\n                      type=\\\"datetime-local\\\"\\n                    />\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </form>\\n          </div>\\n          <div class=\\\" card-footer\\\">\\n            <button class=\\\" btn btn-fill btn-round\\\" type=\\\"submit\\\">Generate</button>\\n          </div>\\n        </div>\\n    \\n         <div class=\\\"terminal\\\" >\\n           <br>\\n           \\n            <pre >983249809985923</pre>\\n            \\n        </div>\\n    \\n      </div>\\n    \\n\\n  </div>\\n\\n \\n    \"","module.exports = \"\\n<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-md-12\\\">\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-header mb-5\\\">\\n          <h5 class=\\\" card-category\\\">Black Table Heading</h5>\\n          <h3 class=\\\" card-title\\\">Created using Poppins Font Family</h3>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" typography-line\\\">\\n            <h1><span> Header 1 </span> The Life of Black Dashboard</h1>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <h2><span> Header 2 </span> The Life of Black Dashboard</h2>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <h3><span> Header 3 </span> The Life of Black Dashboard</h3>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <h4><span> Header 4 </span> The Life of Black Dashboard</h4>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <h5><span> Header 5 </span> The Life of Black Dashboard</h5>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <h6><span> Header 6 </span> The Life of Black Dashboard</h6>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <p>\\n              <span> Paragraph </span> I will be the leader of a company that\\n              ends up being worth billions of dollars, because I got the\\n              answers. I understand culture. I am the nucleus. I think thatâs a\\n              responsibility that I have, to push possibilities, to show people,\\n              this is the level that things could be at.\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Quote </span>\\n            <blockquote>\\n              <p class=\\\" blockquote blockquote-danger\\\">\\n                \\\"I will be the leader of a company that ends up being worth\\n                billions of dollars, because I got the answers. I understand\\n                culture. I am the nucleus. I think that's a responsibility that\\n                I have, to push possibilities, to show people, this is the level\\n                that things could be at.\\\" <br />\\n\\n                <br />\\n\\n                <small> - Noaa </small>\\n              </p>\\n            </blockquote>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Muted Text </span>\\n            <p class=\\\" text-muted\\\">\\n              I will be the leader of a company that ends up being worth\\n              billions of dollars, because I got the answers...\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Primary Text </span>\\n            <p class=\\\" text-primary\\\">\\n              I will be the leader of a company that ends up being worth\\n              billions of dollars, because I got the answers...\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Info Text </span>\\n            <p class=\\\" text-info\\\">\\n              I will be the leader of a company that ends up being worth\\n              billions of dollars, because I got the answers...\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Success Text </span>\\n            <p class=\\\" text-success\\\">\\n              I will be the leader of a company that ends up being worth\\n              billions of dollars, because I got the answers...\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Warning Text </span>\\n            <p class=\\\" text-warning\\\">\\n              I will be the leader of a company that ends up being worth\\n              billions of dollars, because I got the answers...\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Danger Text </span>\\n            <p class=\\\" text-danger\\\">\\n              I will be the leader of a company that ends up being worth\\n              billions of dollars, because I got the answers...\\n            </p>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <h2>\\n              <span> Small Tag </span> Header with small subtitle <br />\\n\\n              <small> Use \\\"small\\\" tag for the headers </small>\\n            </h2>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Lists </span>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-3\\\">\\n                <h5>Unordered List</h5>\\n                <ul>\\n                  <li>List Item</li>\\n                  <li>List Item</li>\\n                  <li class=\\\" list-unstyled\\\">\\n                    <ul>\\n                      <li>List Item</li>\\n                      <li>List Item</li>\\n                      <li>List Item</li>\\n                    </ul>\\n                  </li>\\n                  <li>List Item</li>\\n                </ul>\\n              </div>\\n              <div class=\\\" col-md-3\\\">\\n                <h5>Ordered List</h5>\\n                <ol>\\n                  <li>List Item</li>\\n                  <li>List Item</li>\\n                  <li>List item</li>\\n                  <li>List Item</li>\\n                </ol>\\n              </div>\\n              <div class=\\\" col-md-3\\\">\\n                <h5>Unstyled List</h5>\\n                <ul class=\\\" list-unstyled\\\">\\n                  <li>List Item</li>\\n                  <li>List Item</li>\\n                  <li>List item</li>\\n                  <li>List Item</li>\\n                </ul>\\n              </div>\\n              <div class=\\\" col-md-3\\\">\\n                <h5>Inline List</h5>\\n                <ul class=\\\" list-inline\\\">\\n                  <li class=\\\" list-inline-item\\\">List1</li>\\n                  <li class=\\\" list-inline-item\\\">List2</li>\\n                  <li class=\\\" list-inline-item\\\">List3</li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\" typography-line\\\">\\n            <span> Code </span>\\n            <p>\\n              This is <code> .css-class-as-code </code> , an example of an\\n              inline code element. Wrap inline code within a\\n              <code> <code>...</code> </code> tag.\\n            </p>\\n            <pre>\\n1. #This is an example of preformatted text.<br>\\n\\n2. #Here is another line of code\\n</pre>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<!-- \\n<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-md-8\\\">\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-header\\\"><h5 class=\\\" title\\\">Edit Profile</h5></div>\\n        <div class=\\\" card-body\\\">\\n          <form>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-5 pr-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> Company (disabled) </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    disabled=\\\"\\\"\\n                    placeholder=\\\"Company\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"Creative Code Inc.\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div class=\\\" col-md-3 px-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> Username </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"Username\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"michael23\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div class=\\\" col-md-4 pl-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label for=\\\"exampleInputEmail1\\\"> Email address </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"mike@email.com\\\"\\n                    type=\\\"email\\\"\\n                  />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-6 pr-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> First Name </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"Company\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"Mike\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div class=\\\" col-md-6 pl-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> Last Name </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"Last Name\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"Andrew\\\"\\n                  />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-12\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> Address </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"Home Address\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\\\"\\n                  />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-4 pr-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> City </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"City\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"Mike\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div class=\\\" col-md-4 px-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> Country </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"Country\\\"\\n                    type=\\\"text\\\"\\n                    value=\\\"Andrew\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div class=\\\" col-md-4 pl-md-1\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> Postal Code </label>\\n                  <input\\n                    class=\\\" form-control\\\"\\n                    placeholder=\\\"ZIP Code\\\"\\n                    type=\\\"number\\\"\\n                  />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\" row\\\">\\n              <div class=\\\" col-md-8\\\">\\n                <div class=\\\" form-group\\\">\\n                  <label> About Me </label>\\n                  <textarea\\n                    class=\\\" form-control\\\"\\n                    cols=\\\"80\\\"\\n                    placeholder=\\\"Here can be your description\\\"\\n                    rows=\\\"4\\\"\\n                    value=\\\"Mike\\\"\\n                  >\\nLamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\\n</textarea\\n                  >\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\" card-footer\\\">\\n          <button class=\\\" btn btn-fill btn-danger\\\" type=\\\"submit\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-4\\\">\\n      <div class=\\\" card card-user\\\">\\n        <div class=\\\" card-body\\\">\\n          <p class=\\\" card-text\\\"></p>\\n          <div class=\\\" author\\\">\\n            <div class=\\\" block block-one\\\"></div>\\n            <div class=\\\" block block-two\\\"></div>\\n            <div class=\\\" block block-three\\\"></div>\\n            <div class=\\\" block block-four\\\"></div>\\n            <a href=\\\"javascript:void(0)\\\">\\n              <img alt=\\\"...\\\" class=\\\" avatar\\\" src=\\\"assets/img/emilyz.jpg\\\" />\\n\\n              <h5 class=\\\" title\\\">Mike Andrew</h5>\\n            </a>\\n            <p class=\\\" description\\\">Ceo/Co-Founder</p>\\n          </div>\\n          <div class=\\\" card-description\\\">\\n            Do not be scared of the truth because we need to restart the human\\n            foundation in truth And I love you like Kanye loves Kanye I love\\n            Rick Owens’ bed design but the back is...\\n          </div>\\n        </div>\\n        <div class=\\\" card-footer\\\">\\n          <div class=\\\" button-container\\\">\\n            <button\\n              class=\\\" btn btn-icon btn-round btn-facebook\\\"\\n              href=\\\"javascript:void(0)\\\"\\n            >\\n              <i class=\\\" fab fa-facebook\\\"> </i>\\n            </button>\\n            <button\\n              class=\\\" btn btn-icon btn-round btn-twitter\\\"\\n              href=\\\"javascript:void(0)\\\"\\n            >\\n              <i class=\\\" fab fa-twitter\\\"> </i>\\n            </button>\\n            <button\\n              class=\\\" btn btn-icon btn-round btn-google\\\"\\n              href=\\\"javascript:void(0)\\\"\\n            >\\n              <i class=\\\" fab fa-google-plus\\\"> </i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\\n<!----------------------------------------------------------------------------------------------------------------------------------------->\\n<!----------------------------------------------------------------------------------------------------------------------------------------->\\n\\n\\n<div class=\\\" content\\\">\\n  \\n\\n  <div class=\\\" row\\\">\\n      <!------------------------------------------------------------------------------------------------>\\n      <!------------------------------------------------------------------------------------------------>\\n      <div class=\\\" card\\\">\\n        <div class=\\\" card-header\\\"><h5 class=\\\" title\\\">Create Product </h5></div>\\n        <div class=\\\" card-body\\\">\\n          <form>\\n            <!------------------------------------------------------------------------------------------------>\\n            <div class=\\\" row\\\">\\n                <div class=\\\" col-md-12\\\">\\n                  <div class=\\\" form-group\\\">\\n                    <label> Product Name </label>\\n                    <input\\n                      class=\\\" form-control\\\"\\n                      placeholder=\\\"Product Name\\\"\\n                      type=\\\"text\\\"\\n                      value=\\\"\\\"\\n                    />\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\" row\\\">\\n                  <div class=\\\" col-md-8\\\">\\n                    <div class=\\\" form-group\\\">\\n                      <label> Product Description </label>\\n                      <textarea\\n                        class=\\\" form-control\\\"\\n                        cols=\\\"80\\\"\\n                        placeholder=\\\"Here can be your description\\\"\\n                        rows=\\\"4\\\"\\n                        value=\\\"\\\">\\n                        \\n                      </textarea                >\\n                    </div>\\n                  </div>\\n                </div>\\n           \\n            <div class=\\\" row\\\">\\n                <div class=\\\" col-md-4 pr-md-1\\\">\\n                  <div class=\\\" form-group\\\">\\n                    <label> Product Type </label>\\n                    <input\\n                      class=\\\" form-control\\\"\\n                      placeholder=\\\"Product Type\\\"\\n                      type=\\\"text\\\"\\n                      value=\\\"\\\"\\n                    />\\n                  </div>\\n                </div>\\n                <div class=\\\" col-md-4 px-md-1\\\">\\n                  <div class=\\\" form-group\\\">\\n                    <label> Net Weight </label>\\n                    <input\\n                      class=\\\" form-control\\\"\\n                      placeholder=\\\"Net Weight\\\"\\n                      type=\\\"number\\\"\\n                      value=\\\"\\\"\\n                    />\\n                  </div>\\n                </div>\\n                <div class=\\\" col-md-4 pl-md-1\\\">\\n                  <div class=\\\" form-group\\\">\\n                    <label> Package Type</label>\\n                    <input\\n                      class=\\\" form-control\\\"\\n                      placeholder=\\\"\\\"\\n                      type=\\\"text\\\"\\n                    />\\n                  </div>\\n                </div>\\n              </div>\\n\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-md-6 pr-md-1\\\">\\n              <div class=\\\" form-group\\\">\\n                <label> Product Price</label>\\n                <input\\n                  class=\\\" form-control\\\"\\n                  placeholder=\\\"press enter after input\\\"\\n                  type=\\\"number\\\"\\n                  value=\\\"\\\"\\n                  name=\\\"productPrice\\\"\\n                  onsearch=\\\"calculatetax()\\\"\\n                />\\n              </div>\\n            </div>\\n            \\n            <div class=\\\" col-md-6 pl-md-1\\\">\\n              <div class=\\\" form-group\\\">\\n                <label> Taxed amount</label>\\n                <input\\n                  class=\\\" form-control\\\"\\n                  placeholder=\\\"\\\"\\n                  type=\\\"number\\\"\\n                  name=\\\"tax\\\"\\n                  disabled/>\\n              </div>\\n            </div>\\n            <script>\\n                function calculatetax() {\\n                    var productPrice = document.getElementById('productPrice').value;\\n                    \\n                    var taxes = (0.16 * productPrice) * (quantity) ;\\n                    var totalTax = document.getElementById('tax');\\n                    totalTax.value = taxes;\\n                }\\n            </script>\\n\\n            \\n          </div>\\n\\n          <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-primary\\\">\\n            <i class=\\\"material-icons\\\">CREATE</i>\\n          </button>\\n  \\n      </form>\\n      </div>\\n    </div>\\n</div>\\n\\n\\n<!----------------------------------------------------------------------------------------------------------------------------------------->\\n<!----------------------------------------------------------------------------------------------------------------------------------------->\"","import { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AdminLayoutRoutes } from \"./admin-layout.routing\";\nimport { DashboardComponent } from \"../../pages/dashboard/dashboard.component\";\nimport { IconsComponent } from \"../../pages/icons/icons.component\";\nimport { MapComponent } from \"../../pages/map/map.component\";\nimport { NotificationsComponent } from \"../../pages/notifications/notifications.component\";\nimport { UserComponent } from \"../../pages/user/user.component\";\nimport { TablesComponent } from \"../../pages/tables/tables.component\";\nimport { TypographyComponent } from \"../../pages/typography/typography.component\";\n// import { RtlComponent } from \"../../pages/rtl/rtl.component\";\n// import { LandingComponent } from '../../pages/landing/landing.component';\nimport { ProductsComponent } from '../../pages/products/products.component';\nimport { CreateProductComponent } from '../../pages/create-product/create-product.component';\nimport { BatchHistoryComponent } from '../../pages/batch-history/batch-history.component';\n\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n  ],\n  declarations: [\n    // LandingComponent,\n    DashboardComponent,\n    UserComponent,\n    TablesComponent,\n    IconsComponent,\n    TypographyComponent,\n    NotificationsComponent,\n    MapComponent,\n    ProductsComponent,\n    CreateProductComponent,\n    BatchHistoryComponent\n    // RtlComponent\n  ]\n})\nexport class AdminLayoutModule {}\n","import { Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"../../pages/dashboard/dashboard.component\";\nimport { IconsComponent } from \"../../pages/icons/icons.component\";\nimport { MapComponent } from \"../../pages/map/map.component\";\nimport { NotificationsComponent } from \"../../pages/notifications/notifications.component\";\nimport { UserComponent } from \"../../pages/user/user.component\";\nimport { TablesComponent } from \"../../pages/tables/tables.component\";\nimport { TypographyComponent } from \"../../pages/typography/typography.component\";\nimport { ProductsComponent } from \"../../pages/products/products.component\";\nimport { CreateProductComponent } from '../../pages/create-product/create-product.component';\nimport { BatchHistoryComponent } from '../../pages/batch-history/batch-history.component';\n// import { RtlComponent } from \"../../pages/rtl/rtl.component\";\n\nexport const AdminLayoutRoutes: Routes = [\n  { path: \"dashboard\", component: DashboardComponent },\n  { path: \"icons\", component: IconsComponent },\n  { path: \"maps\", component: MapComponent },\n  { path: \"notifications\", component: NotificationsComponent },\n  { path: \"user\", component: UserComponent },\n  { path: \"tables\", component: TablesComponent },\n  { path: \"typography\", component: TypographyComponent },\n  { path: \"products\", component: ProductsComponent },\n  { path: \"create-product\", component: CreateProductComponent },\n  { path: \"batch-history\", component: BatchHistoryComponent }\n  // { path: \"rtl\", component: RtlComponent }\n];\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-batch-history',\r\n  templateUrl: './batch-history.component.html'\r\n  // styleUrls: ['./batch-history.component.scss']\r\n})\r\nexport class BatchHistoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-product',\r\n  templateUrl: './create-product.component.html'\r\n  // styleUrls: ['./create-product.component.scss']\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport Chart from 'chart.js';\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"dashboard.component.html\"\n})\nexport class DashboardComponent implements OnInit {\n  public canvas : any;\n  public ctx;\n  public datasets: any;\n  public data: any;\n  public myChartData;\n  public clicked: boolean = true;\n  public clicked1: boolean = false;\n  public clicked2: boolean = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    var gradientChartOptionsConfigurationWithTooltipBlue: any = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#2380f7\"\n          }\n        }],\n\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#2380f7\"\n          }\n        }]\n      }\n    };\n\n    var gradientChartOptionsConfigurationWithTooltipPurple: any = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }],\n\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(225,78,202,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }]\n      }\n    };\n\n    var gradientChartOptionsConfigurationWithTooltipRed: any = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }],\n\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(233,32,16,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }]\n      }\n    };\n\n    var gradientChartOptionsConfigurationWithTooltipOrange: any = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 110,\n            padding: 20,\n            fontColor: \"#ff8a76\"\n          }\n        }],\n\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(220,53,69,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#ff8a76\"\n          }\n        }]\n      }\n    };\n\n    var gradientChartOptionsConfigurationWithTooltipGreen: any = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }],\n\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(0,242,195,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }]\n      }\n    };\n\n\n    var gradientBarChartConfiguration: any = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }],\n\n        xAxes: [{\n\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }]\n      }\n    };\n\n    this.canvas = document.getElementById(\"chartLineRed\");\n    this.ctx = this.canvas.getContext(\"2d\");\n\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, 'rgba(233,32,16,0.2)');\n    gradientStroke.addColorStop(0.4, 'rgba(233,32,16,0.0)');\n    gradientStroke.addColorStop(0, 'rgba(233,32,16,0)'); //red colors\n\n    var data = {\n      labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n      datasets: [{\n        label: \"Data\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: '#ec250d',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: '#ec250d',\n        pointBorderColor: 'rgba(255,255,255,0)',\n        pointHoverBackgroundColor: '#ec250d',\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [80, 100, 70, 80, 120, 80],\n      }]\n    };\n\n    var myChart = new Chart(this.ctx, {\n      type: 'line',\n      data: data,\n      options: gradientChartOptionsConfigurationWithTooltipRed\n    });\n\n\n    this.canvas = document.getElementById(\"chartLineGreen\");\n    this.ctx = this.canvas.getContext(\"2d\");\n\n\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, 'rgba(66,134,121,0.15)');\n    gradientStroke.addColorStop(0.4, 'rgba(66,134,121,0.0)'); //green colors\n    gradientStroke.addColorStop(0, 'rgba(66,134,121,0)'); //green colors\n\n    var data = {\n      labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: '#00d6b4',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: '#00d6b4',\n        pointBorderColor: 'rgba(255,255,255,0)',\n        pointHoverBackgroundColor: '#00d6b4',\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [90, 27, 60, 12, 80],\n      }]\n    };\n\n    var myChart = new Chart(this.ctx, {\n      type: 'line',\n      data: data,\n      options: gradientChartOptionsConfigurationWithTooltipGreen\n\n    });\n\n\n\n    var chart_labels = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    this.datasets = [\n      [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n      [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n      [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n    ];\n    this.data = this.datasets[0];\n\n\n\n    this.canvas = document.getElementById(\"chartBig1\");\n    this.ctx = this.canvas.getContext(\"2d\");\n\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, 'rgba(233,32,16,0.2)');\n    gradientStroke.addColorStop(0.4, 'rgba(233,32,16,0.0)');\n    gradientStroke.addColorStop(0, 'rgba(233,32,16,0)'); //red colors\n\n    var config = {\n      type: 'line',\n      data: {\n        labels: chart_labels,\n        datasets: [{\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: '#ec250d',\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: '#ec250d',\n          pointBorderColor: 'rgba(255,255,255,0)',\n          pointHoverBackgroundColor: '#ec250d',\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: this.data,\n        }]\n      },\n      options: gradientChartOptionsConfigurationWithTooltipRed\n    };\n    this.myChartData = new Chart(this.ctx, config);\n\n\n    this.canvas = document.getElementById(\"CountryChart\");\n    this.ctx  = this.canvas.getContext(\"2d\");\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\n    gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\n    gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\n\n\n    var myChart = new Chart(this.ctx, {\n      type: 'bar',\n      responsive: true,\n      legend: {\n        display: false\n      },\n      data: {\n        labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n        datasets: [{\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: '#1f8ef1',\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45],\n        }]\n      },\n      options: gradientBarChartConfiguration\n    });\n\n  }\n  public updateOptions() {\n    this.myChartData.data.datasets[0].data = this.data;\n    this.myChartData.update();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-icons\",\n  templateUrl: \"icons.component.html\"\n})\nexport class IconsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\n\ndeclare const google: any;\n\ninterface Marker {\nlat: number;\nlng: number;\nlabel?: string;\ndraggable?: boolean;\n}\n\n@Component({\n  selector: \"app-map\",\n  templateUrl: \"map.component.html\"\n})\nexport class MapComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {\n\n        var myLatlng = new google.maps.LatLng(40.748817, -73.985428);\n        var mapOptions = {\n            zoom: 13,\n            center: myLatlng,\n            scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n            styles: [{\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#1d2c4d\"\n                }]\n              },\n              {\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#8ec3b9\"\n                }]\n              },\n              {\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#1a3646\"\n                }]\n              },\n              {\n                \"featureType\": \"administrative.country\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#4b6878\"\n                }]\n              },\n              {\n                \"featureType\": \"administrative.land_parcel\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#64779e\"\n                }]\n              },\n              {\n                \"featureType\": \"administrative.province\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#4b6878\"\n                }]\n              },\n              {\n                \"featureType\": \"landscape.man_made\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#334e87\"\n                }]\n              },\n              {\n                \"featureType\": \"landscape.natural\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#023e58\"\n                }]\n              },\n              {\n                \"featureType\": \"poi\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#283d6a\"\n                }]\n              },\n              {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#6f9ba5\"\n                }]\n              },\n              {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#1d2c4d\"\n                }]\n              },\n              {\n                \"featureType\": \"poi.park\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\n                  \"color\": \"#023e58\"\n                }]\n              },\n              {\n                \"featureType\": \"poi.park\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#3C7680\"\n                }]\n              },\n              {\n                \"featureType\": \"road\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#304a7d\"\n                }]\n              },\n              {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#98a5be\"\n                }]\n              },\n              {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#1d2c4d\"\n                }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#2c6675\"\n                }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\n                  \"color\": \"#9d2a80\"\n                }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#9d2a80\"\n                }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#b0d5ce\"\n                }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#023e58\"\n                }]\n              },\n              {\n                \"featureType\": \"transit\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#98a5be\"\n                }]\n              },\n              {\n                \"featureType\": \"transit\",\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{\n                  \"color\": \"#1d2c4d\"\n                }]\n              },\n              {\n                \"featureType\": \"transit.line\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\n                  \"color\": \"#283d6a\"\n                }]\n              },\n              {\n                \"featureType\": \"transit.station\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#3a4762\"\n                }]\n              },\n              {\n                \"featureType\": \"water\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\n                  \"color\": \"#0e1626\"\n                }]\n              },\n              {\n                \"featureType\": \"water\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\n                  \"color\": \"#4e6d70\"\n                }]\n              }\n            ]\n        };\n        var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n\n        var marker = new google.maps.Marker({\n            position: myLatlng,\n            title: \"Hello World!\"\n        });\n\n        // To add the marker to the map, call setMap();\n        marker.setMap(map);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"notifications.component.html\"\n})\nexport class NotificationsComponent implements OnInit {\n  staticAlertClosed  = false;\n  staticAlertClosed1 = false;\n  staticAlertClosed2 = false;\n  staticAlertClosed3 = false;\n  staticAlertClosed4 = false;\n  staticAlertClosed5 = false;\n  staticAlertClosed6 = false;\n  staticAlertClosed7 = false;\n\n  constructor(private toastr: ToastrService) {}\n\n  showNotification(from, align){\n\n      const color = Math.floor((Math.random() * 5) + 1);\n\n      switch(color){\n        case 1:\n        this.toastr.info('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n           disableTimeOut: true,\n           closeButton: true,\n           enableHtml: true,\n           toastClass: \"alert alert-info alert-with-icon\",\n           positionClass: 'toast-' + from + '-' +  align\n         });\n        break;\n        case 2:\n        this.toastr.success('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n           disableTimeOut: true,\n           closeButton: true,\n           enableHtml: true,\n           toastClass: \"alert alert-success alert-with-icon\",\n           positionClass: 'toast-' + from + '-' +  align\n         });\n        break;\n        case 3:\n        this.toastr.warning('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n           disableTimeOut: true,\n           closeButton: true,\n           enableHtml: true,\n           toastClass: \"alert alert-warning alert-with-icon\",\n           positionClass: 'toast-' + from + '-' +  align\n         });\n        break;\n        case 4:\n        this.toastr.error('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n           disableTimeOut: true,\n           enableHtml: true,\n           closeButton: true,\n           toastClass: \"alert alert-danger alert-with-icon\",\n           positionClass: 'toast-' + from + '-' +  align\n         });\n         break;\n         case 5:\n         this.toastr.show('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n            disableTimeOut: true,\n            closeButton: true,\n            enableHtml: true,\n            toastClass: \"alert alert-primary alert-with-icon\",\n            positionClass: 'toast-' + from + '-' +  align\n          });\n        break;\n        default:\n        break;\n      }\n  }\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-tables\",\n  templateUrl: \"tables.component.html\"\n})\nexport class TablesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-typography\",\n  templateUrl: \"typography.component.html\"\n})\nexport class TypographyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user\",\n  templateUrl: \"user.component.html\"\n})\nexport class UserComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n"],"sourceRoot":""}